{"meta":{"title":"大兵的博客","subtitle":null,"description":null,"author":"Zhibin Jin","url":"https://www.sorrytime.cn","root":"/"},"pages":[{"title":"关于","date":"2019-10-11T11:45:52.747Z","updated":"2019-10-11T11:45:52.747Z","comments":false,"path":"about/index.html","permalink":"https://www.sorrytime.cn/about/index.html","excerpt":"","text":"Effective - 11 1/day 12dThinking - 800 40/day 20dspring - 30dmybatis 10dredis 10dother 10d"},{"title":"分类","date":"2019-10-06T09:44:33.132Z","updated":"2019-10-06T09:44:33.132Z","comments":false,"path":"categories/index.html","permalink":"https://www.sorrytime.cn/categories/index.html","excerpt":"","text":""},{"title":"书单","date":"2019-10-06T09:44:33.132Z","updated":"2019-10-06T09:44:33.132Z","comments":false,"path":"books/index.html","permalink":"https://www.sorrytime.cn/books/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2019-10-06T09:44:33.132Z","updated":"2019-10-06T09:44:33.132Z","comments":true,"path":"links/index.html","permalink":"https://www.sorrytime.cn/links/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-10-06T09:44:33.132Z","updated":"2019-10-06T09:44:33.132Z","comments":false,"path":"tags/index.html","permalink":"https://www.sorrytime.cn/tags/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-10-06T09:44:33.132Z","updated":"2019-10-06T09:44:33.132Z","comments":false,"path":"repository/index.html","permalink":"https://www.sorrytime.cn/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"ipfs 跨域配置","slug":"ipfs-跨域配置","date":"2019-11-02T05:50:14.000Z","updated":"2019-11-02T05:51:47.116Z","comments":true,"path":"2019/11/02/ipfs-跨域配置/","link":"","permalink":"https://www.sorrytime.cn/2019/11/02/ipfs-跨域配置/","excerpt":"","text":"IPFS启动后的跨域配置12$ ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin &apos;[&quot;http://www.ipfslink.net:9000&quot;, &quot;http://127.0.0.1:5001&quot;, &quot;https://webui.ipfs.io&quot;]&apos;$ ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods &apos;[&quot;PUT&quot;, &quot;GET&quot;, &quot;POST&quot;]&apos;","categories":[{"name":"IPFS","slug":"IPFS","permalink":"https://www.sorrytime.cn/categories/IPFS/"}],"tags":[{"name":"跨域配置","slug":"跨域配置","permalink":"https://www.sorrytime.cn/tags/跨域配置/"}]},{"title":"IPFS 播放器安装","slug":"IPFS-播放器安装","date":"2019-11-01T02:00:29.000Z","updated":"2019-11-02T05:49:02.095Z","comments":true,"path":"2019/11/01/IPFS-播放器安装/","link":"","permalink":"https://www.sorrytime.cn/2019/11/01/IPFS-播放器安装/","excerpt":"","text":"安装平台：Ubuntu, 播放器地址：https://github.com/download13/ipfstube申请SSL证书安装Nginxsudo apt-get -y install nginx安装 letsencryptsudo apt-get -y install letsencrypt安装 Docker、Docker ComposeDocker安装curl -sSL https://get.docker.com/ | shservice docker startDocker Compose安装12curl -L https://github.com/docker/compose/releases/download/1.17.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose端口检查为防止80端口冲突，导致安装失败，先卸载掉之前的Nginx。apt-get -y remove nginx1234#找到80后的LISTEN xx/yy，xx就是进程号netstat -lnp|grep 80#杀掉xx进程kill -9 xx安装 ipfstue12345apt-get -y install gitgit clone https://github.com/download13/ipfstube.gitcd ipfstube#编辑nginx.conf文件nano nginx.confserver_name和ssl证书后面的域名改成你的运行docker-compose up -d修改docker端口映射https://blog.csdn.net/mazhen1991/article/details/85674209","categories":[{"name":"IPFS","slug":"IPFS","permalink":"https://www.sorrytime.cn/categories/IPFS/"}],"tags":[{"name":"播放器","slug":"播放器","permalink":"https://www.sorrytime.cn/tags/播放器/"}]},{"title":"git 新建远程仓库并初始化","slug":"git-新建远程仓库并初始化","date":"2019-10-21T12:12:36.000Z","updated":"2019-10-21T12:42:36.292Z","comments":true,"path":"2019/10/21/git-新建远程仓库并初始化/","link":"","permalink":"https://www.sorrytime.cn/2019/10/21/git-新建远程仓库并初始化/","excerpt":"","text":"新建项目git仓库创建git仓库名称和路径，假定是/home/git/repro/xxx.git，在/home/git目录下输入命令：12$ mkdir repro$ chown git:git repro/ //修改repro目录归属初始化仓库123$ cd repo$ git init --bare xxx.git //初始化远程空仓库，该仓库不允许直接进行git命令操作$ chown -R git:git xxx.git //仓库所属用户改为git克隆仓库1$ git clone git@ip:/home/git/repro/xxx.git通过克隆已有仓库创建新的裸仓库1$ git clone --bare xxxproject yyyproject.git","categories":[{"name":"工具","slug":"工具","permalink":"https://www.sorrytime.cn/categories/工具/"}],"tags":[{"name":"GIT","slug":"GIT","permalink":"https://www.sorrytime.cn/tags/GIT/"}]},{"title":"http跨域时的options请求详解及解决Go Rest Api 服务跨域问题","slug":"http跨域时的options请求详解及解决Go-Rest-Api-服务跨域问题","date":"2019-10-21T09:17:15.000Z","updated":"2019-11-02T05:49:02.096Z","comments":true,"path":"2019/10/21/http跨域时的options请求详解及解决Go-Rest-Api-服务跨域问题/","link":"","permalink":"https://www.sorrytime.cn/2019/10/21/http跨域时的options请求详解及解决Go-Rest-Api-服务跨域问题/","excerpt":"","text":"什么是options请求无论后端还是前端，开发过程中多多少少都会碰到跨域问题，跨域问题中多数会遇到options请求问题。 在正式的跨域之前，某些条件下浏览器会根据需要发起一次预检，这就是options请求，用来让服务端返回允许的方法。跨域请求类型浏览器将跨域请求分为两类，简单请求和非简单请求，简单请求时浏览器不会进行预检，非简单请求时会进行预检。简单请求同时满足以下三个条件的属于简单请求： 1. 请求方式只能是： GET、POST、HEAD 2. HTTP请求头限制这几种字段：Accept、Accept-Language、Content-Language、Content-Type、Last-Event-ID 3. Content-type只能取：application/x-www-form-urlencoded、multipart/form-data、text/plain 简单请求，浏览器直接请求，在请求头信息中，增减origin字段，来说明本次请求来源（协议+域名+端口）。 服务器根据这个值来决定是否同意请求，服务器返回的响应则会多几个头信息端。非简单请求是对服务器有特殊要求的请求，比如请求方式是PUT/DELETE,或者Content-Type字段类型是application/json. 都会在正式通信之前，通过增加一次HTTP请求预检。向服务器询问当前网页所在域名是否在服务器许可名单， 服务器允许后方可进行后续正式请求，否则报错。这时需要后端实现拦截器排除Options请求。Golang Restful 跨域使用Go-Swagger生成的RESTFul后端框架中碰到了跨域Options预检请求问题，通过后端实现拦截器来过滤Options请求。 具体实现如下： configure_XXX.go文件中实现以下1234567891011121314151617 func setupGlobalMiddleware(handler http.Handler) http.Handler &#123; return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) &#123; //cros w.Header().Set(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;) w.Header().Set(&quot;Access-Control-Allow-Headers&quot;,&quot;Content-Type,AccessToken,X-CSRF-Token,Authorization,Token&quot;) w.Header().Set(&quot;Access-Control-Allow-Methods&quot;, &quot;GET, POST, OPTIONS, PUT, DELETE&quot;) w.Header().Set(&quot;Access-Control-Expose-Headers&quot;, &quot;Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type&quot;) w.Header().Set(&quot;Access-Control-Allow-Credentials&quot;,&quot;true&quot;) method := r.Method if method == &quot;OPTIONS&quot; &#123; w.WriteHeader(http.StatusNoContent) return &#125; //end handler.ServeHTTP(w, r) &#125;)&#125;","categories":[{"name":"Web开发","slug":"Web开发","permalink":"https://www.sorrytime.cn/categories/Web开发/"}],"tags":[{"name":"Golang跨域问题","slug":"Golang跨域问题","permalink":"https://www.sorrytime.cn/tags/Golang跨域问题/"}]},{"title":"IPFS.io 访问设置","slug":"IPFS-io-访问设置","date":"2019-10-16T01:00:21.000Z","updated":"2019-10-18T11:01:30.139Z","comments":true,"path":"2019/10/16/IPFS-io-访问设置/","link":"","permalink":"https://www.sorrytime.cn/2019/10/16/IPFS-io-访问设置/","excerpt":"","text":"查找主机hosts文件Windows hosts系统文件目录hosts文件一般放在C:\\Windows\\System32\\drivers\\etc，如果没有请全盘搜索。修改Hosts文件windows系统hosts文件修改末尾加入以下两行12209.94.78.78 ipfs.io209.94.90.1 ipfs.io","categories":[{"name":"IPFS","slug":"IPFS","permalink":"https://www.sorrytime.cn/categories/IPFS/"}],"tags":[{"name":"ipfs.io访问设置","slug":"ipfs-io访问设置","permalink":"https://www.sorrytime.cn/tags/ipfs-io访问设置/"}]},{"title":".MD常用语法","slug":"MD常用语法","date":"2019-10-11T08:54:40.000Z","updated":"2019-10-21T12:10:51.846Z","comments":true,"path":"2019/10/11/MD常用语法/","link":"","permalink":"https://www.sorrytime.cn/2019/10/11/MD常用语法/","excerpt":"","text":".md(markdown)是一种快速标记、快速排版语言，目前很多项目的readme都是使用.md文件编写。常用符号 ‘# * - . &gt;’常用符号开头后的空格要注意，空格用于分割标记符合内容。标题符号‘#’正常标签1234# 一级标题 ## 二级标题 ### 三级标题#### 四级标题标签闭合1234# 一级标题 ### 二级标题 ##### 三级标题 ####### 四级标题 ####列表符号‘+ 1.’无序列表123+ a + b + cabc有序列表1231. a2. b3. cabc引用说明区块 &gt;对内容做一些说明或者引用他人等。正常形式12&gt; 引用内容&gt; 说明内容效果：引用内容说明内容嵌套形式123456&gt; 1级引用&gt;&gt; 2级引用&gt;&gt;&gt; 3级引用&gt;&gt;&gt;&gt; 4级引用&gt;&gt;&gt;&gt;&gt; 5级引用&gt;&gt;&gt;&gt;&gt;&gt; 6级引用效果：1级引用2级引用3级引用4级引用5级引用6级引用代码块 `单行代码块`单行代码块`效果：单行代码块多行代码块```多行代码多行代码```效果：12多行代码块多行代码块链接行内式链接文字放在[]中，链接地址放在()中，链接可带title属性，链接地址后空一格，然后把title用引号引起来。12[myblog](https://blog.bitqts.com &quot;我的博客&quot;),是一个人原创博客,用于记录和分享学习工作中的问题及心得。效果：myblog, 是一个人原创博客,用于记录和分享学习工作中的问题及心得。参数式链接文字放在[]中，链接地址放在:后，链接地址后空一格，然后用引号引起来，使用时直接[]引用链接文字。123[myblog]是一个人原创博客,用于记录和分享学习工作中的问题及心得。[myblog]: https://blog.bitqts.com &quot;我的博客&quot;效果：myblog是一个人原创博客,用于记录和分享学习工作中的问题及心得。图片引用行内式[]前要加上!，图片名放在[]中，图片地址和title放在随后的()中，title前空一格用引号引起来。1![mylogo](images/me.jpeg &quot;我的logo&quot;)参数式图片名放在[]中，图片地址放在:后，title前空一格用引号引起来,引用图片的时候在[]前加上!12![mylogo][mylogo]: images/me.jpeg &quot;我的logo&quot;分割线分割线由* - _（星号，减号，底线）3个符号中的至少3个重复的符号表示。123456789---- - -------**** * *******____ _ _______特殊处理字体一个星号或者是一个下划线包起来，会转换为倾斜，如果是2个，会转换为加粗1234*myblog* **myblog**_myblog_ __myblog__效果：myblogmyblogmyblogmyblog转义123456\\\\\\*\\+\\-\\`\\_删除线1~~删除~~效果：删除表格设置12345|456|456|456||:---|:---:|---:||def|def|def||def|def|def||def|def|def|效果：456456456defdefdefdefdefdefdefdefdef","categories":[{"name":"工具","slug":"工具","permalink":"https://www.sorrytime.cn/categories/工具/"}],"tags":[{"name":".MD语法","slug":"MD语法","permalink":"https://www.sorrytime.cn/tags/MD语法/"}]},{"title":"《Thinking In Java》读书笔记","slug":"《Thinking-In-Java》读书笔记","date":"2019-10-11T06:31:13.000Z","updated":"2019-10-11T11:45:52.746Z","comments":true,"path":"2019/10/11/《Thinking-In-Java》读书笔记/","link":"","permalink":"https://www.sorrytime.cn/2019/10/11/《Thinking-In-Java》读书笔记/","excerpt":"","text":"","categories":[{"name":"读书笔记","slug":"读书笔记","permalink":"https://www.sorrytime.cn/categories/读书笔记/"}],"tags":[{"name":"《Thinking In Java》","slug":"《Thinking-In-Java》","permalink":"https://www.sorrytime.cn/tags/《Thinking-In-Java》/"}]},{"title":"数据结构-四叉树","slug":"数据结构-四叉树","date":"2019-10-07T07:54:51.000Z","updated":"2019-10-11T11:45:52.747Z","comments":true,"path":"2019/10/07/数据结构-四叉树/","link":"","permalink":"https://www.sorrytime.cn/2019/10/07/数据结构-四叉树/","excerpt":"","text":"","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://www.sorrytime.cn/categories/数据结构/"}],"tags":[{"name":"四叉树","slug":"四叉树","permalink":"https://www.sorrytime.cn/tags/四叉树/"}]},{"title":"数据结构-单链表","slug":"数据结构-单链表","date":"2019-10-06T12:41:50.000Z","updated":"2019-11-02T05:49:02.096Z","comments":true,"path":"2019/10/06/数据结构-单链表/","link":"","permalink":"https://www.sorrytime.cn/2019/10/06/数据结构-单链表/","excerpt":"","text":"","categories":[{"name":"数据结构","slug":"数据结构","permalink":"https://www.sorrytime.cn/categories/数据结构/"}],"tags":[{"name":"单链表","slug":"单链表","permalink":"https://www.sorrytime.cn/tags/单链表/"}]},{"title":"Hexo 常用命令","slug":"hexo","date":"2018-10-06T12:41:50.000Z","updated":"2019-10-11T11:45:52.746Z","comments":true,"path":"2018/10/06/hexo/","link":"","permalink":"https://www.sorrytime.cn/2018/10/06/hexo/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html","categories":[{"name":"工具","slug":"工具","permalink":"https://www.sorrytime.cn/categories/工具/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://www.sorrytime.cn/tags/Hexo/"}]},{"title":"图片测试","slug":"post-name","date":"2017-10-06T12:41:50.000Z","updated":"2019-10-11T11:45:52.746Z","comments":true,"path":"2017/10/06/post-name/","link":"","permalink":"https://www.sorrytime.cn/2017/10/06/post-name/","excerpt":"","text":"test","categories":[{"name":"测试","slug":"测试","permalink":"https://www.sorrytime.cn/categories/测试/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://www.sorrytime.cn/tags/测试/"}]}]}